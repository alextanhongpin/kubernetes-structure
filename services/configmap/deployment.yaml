apiVersion: v1
kind: ConfigMap
metadata:
  name: go-config
data:
  greeting: hello world
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-server-deployment
  labels:
    app: go-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-server
  template:
    metadata:
      labels:
        # This needs to match the selector.
        app: go-server
    spec:
      containers:
      - name: go-server
        image: alextanhongpin/go-server:latest
        imagePullPolicy: IfNotPresent
        # Define the container port.
        ports:
        # - name: go-server-port
        - containerPort: 8080
        env:
          - name: GREETING
            valueFrom:
              configMapKeyRef:
                # The ConfigMap containing the value you want to assign to GREETING.
                name: go-config
                key: greeting
---
apiVersion: v1
kind: Service
metadata:
  name: go-server-service
spec:
  # Using Docker Desktop, NodePort is required (?).
  type: NodePort
  # type: LoadBalancer
  # type: ClusterIP
  # clusterIP: ""# This does not work.
  ports:
  - protocol: TCP
    port: 80 # Expose as port 8080.
    targetPort: 8080 # Which port do pods selected by this service expose?
  selector:
    # This needs to match the deployment selector.
    app: go-server
